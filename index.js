const TelegramBot = require('node-telegram-bot-api');
const { OpenAI } = require('openai');
const fs = require('fs');
const redis = require('redis');
require('dotenv').config();

const TELEGRAM_TOKEN = process.env.TELEGRAM_TOKEN;
const OPENAI_API_KEY = process.env.OPENAI_API_KEY;
const REDIS_URL = process.env.REDIS_URL;

if (!TELEGRAM_TOKEN || !OPENAI_API_KEY || !REDIS_URL) {
  console.error('‚ùå –û—à–∏–±–∫–∞: TELEGRAM_TOKEN, OPENAI_API_KEY –∏–ª–∏ REDIS_URL –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç. –î–æ–±–∞–≤—å –∏—Ö –≤ .env!');
  process.exit(1);
}

const bot = new TelegramBot(TELEGRAM_TOKEN, { polling: true });
const openai = new OpenAI({ apiKey: OPENAI_API_KEY });

const redisClient = redis.createClient({ url: REDIS_URL });
redisClient.on('error', (err) => console.error('Redis –æ—à–∏–±–∫–∞:', err.message));
redisClient.connect().then(() => console.log('‚úÖ Redis –ø–æ–¥–∫–ª—é—á—ë–Ω.')).catch(err => {
  console.error('‚ùå Redis –æ—à–∏–±–∫–∞:', err.message);
  process.exit(1);
});

bot.on('message', async (msg) => {
  const chatId = msg.chat.id;
  const userInput = msg.text;

  if (!userInput) return;

  try {
    await bot.sendChatAction(chatId, 'typing');

    const response = await openai.chat.completions.create({
      model: 'gpt-4o',
      messages: [
        { role: 'system', content: '–¢—ã ‚Äî –ì–µ—Ä–º–µ—Å, –≥–æ–≤–æ—Ä–∏ –∫–∞–∫ –ø–∞—Ä—Ç–Ω—ë—Ä, –±–µ–∑ —Å—É—Ö–æ—Å—Ç–∏ –∏ —à–∞–±–ª–æ–Ω–æ–≤.' },
        { role: 'user', content: userInput }
      ],
      temperature: 0.7,
      max_tokens: 500
    });

    const reply = response.choices[0]?.message?.content?.trim() || '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑?';
    await bot.sendMessage(chatId, reply);

  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ GPT:', err.message);
    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –ò–ò. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ!');
  }
});

console.log('ü§ñ –ì–µ—Ä–º–µ—Å –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–π...');



